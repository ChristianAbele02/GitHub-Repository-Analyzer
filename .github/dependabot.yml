# GitHub Repository Analyzer - Dependabot Configuration
# This file configures automatic dependency updates for the GitHub Repository Analyzer project
# Covers Python packages, GitHub Actions, and implements security best practices

version: 2
updates:
  # Python Dependencies (pip ecosystem)
  # Covers requirements.txt, setup.py, and pyproject.toml files
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "monday"
      time: "09:00"
      timezone: "UTC"
    
    # Group dependencies to reduce PR volume
    groups:
      # Core data analysis and ML libraries
      data-science:
        patterns:
          - "pandas*"
          - "numpy*"
          - "scikit-learn*"
          - "scipy*"
          - "statsmodels*"
          - "matplotlib*"
          - "seaborn*"
          - "plotly*"
        update-types:
          - "minor"
          - "patch"
      
      # API and web libraries
      web-api:
        patterns:
          - "requests*"
          - "urllib3*"
          - "flask*"
          - "django*"
          - "fastapi*"
          - "httpx*"
        update-types:
          - "minor"
          - "patch"
      
      # Development and testing tools
      dev-tools:
        dependency-type: "development"
        patterns:
          - "pytest*"
          - "black*"
          - "flake8*"
          - "mypy*"
          - "coverage*"
          - "pre-commit*"
          - "tox*"
        update-types:
          - "minor"
          - "patch"
      
      # Production dependencies (catch-all for remaining)
      production:
        dependency-type: "production"
        exclude-patterns:
          - "pandas*"
          - "numpy*"
          - "scikit-learn*"
          - "scipy*"
          - "statsmodels*"
          - "matplotlib*"
          - "seaborn*"
          - "plotly*"
          - "requests*"
          - "urllib3*"
          - "flask*"
          - "django*"
          - "fastapi*"
          - "httpx*"
        update-types:
          - "minor"
          - "patch"
    
    # Ignore major version updates for stability
    ignore:
      - dependency-name: "*"
        update-types: ["version-update:semver-major"]
    
    # Allow only certain dependency types
    allow:
      - dependency-type: "direct"
      - dependency-type: "indirect"
    
    # Limit concurrent PRs
    open-pull-requests-limit: 5
    
    # Custom commit messages
    commit-message:
      prefix: "deps"
      prefix-development: "deps-dev"
      include: "scope"

  # GitHub Actions Dependencies
  # Keeps workflow actions up to date
  - package-ecosystem: "github-actions"
    directory: "/"
    schedule:
      interval: "weekly"
      day: "tuesday"
      time: "10:00"
      timezone: "UTC"
    
    # Group all GitHub Actions together
    groups:
      github-actions:
        patterns:
          - "*"
        update-types:
          - "minor"
          - "patch"
          - "major"  # Actions often have breaking changes in major versions
    
    # Limit concurrent PRs
    open-pull-requests-limit: 3
    
    # Custom commit messages
    commit-message:
      prefix: "ci"
      include: "scope"

  # Security Updates Configuration
  # Separate configuration for security-focused updates
  - package-ecosystem: "pip"
    directory: "/"
    schedule:
      interval: "daily"
      time: "06:00"
      timezone: "UTC"
    
    # Security-focused grouping
    groups:
      security-updates:
        applies-to: security-updates
        patterns:
          - "*"
        update-types:
          - "patch"
          - "minor"
    
    # Only security updates for this configuration
    allow:
      - dependency-type: "all"
    
    # No limit on security PRs
    open-pull-requests-limit: 10
    
    # Priority labels for security updates
    labels:
      - "security"
      - "dependencies"
      - "priority-high"
    
    # Auto-merge patch security updates (optional - remove if you prefer manual review)
    # Note: Requires branch protection rules to be properly configured
    reviewers:
      - "ChristianAbele02"  # Replace with your GitHub username
    
    # Custom commit messages for security
    commit-message:
      prefix: "security"
      include: "scope"
